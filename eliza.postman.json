{
  "info": {
    "name": "Eliza AI Framework API Collection",
    "description": "Complete Postman collection for the Eliza AI Framework REST API endpoints. Updated to match actual API implementation.",
    "version": "1.0.19",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "variable": [
    {
      "key": "baseUrl",
      "value": "http://localhost:3000",
      "type": "string"
    },
    {
      "key": "apiKey",
      "value": "",
      "description": "Optional API key for authentication (X-API-KEY header)",
      "type": "string"
    },
    {
      "key": "agentId",
      "value": "",
      "description": "Agent UUID for agent-specific endpoints",
      "type": "string"
    },
    {
      "key": "roomId",
      "value": "",
      "description": "Room UUID for room-specific endpoints",
      "type": "string"
    },
    {
      "key": "channelId",
      "value": "",
      "description": "Channel UUID for channel-specific endpoints",
      "type": "string"
    },
    {
      "key": "serverId",
      "value": "",
      "description": "Server UUID for server-specific endpoints",
      "type": "string"
    },
    {
      "key": "logId",
      "value": "",
      "description": "Log ID for log-specific endpoints",
      "type": "string"
    },
    {
      "key": "memoryId",
      "value": "",
      "description": "Memory ID for memory-specific endpoints",
      "type": "string"
    },
    {
      "key": "worldId",
      "value": "",
      "description": "World ID for world-specific endpoints",
      "type": "string"
    },
    {
      "key": "messageId",
      "value": "",
      "description": "Message ID for message-specific endpoints",
      "type": "string"
    },
    {
      "key": "userId",
      "value": "",
      "description": "User ID for user-specific operations and message authoring",
      "type": "string"
    }
  ],
  "auth": {
    "type": "apikey",
    "apikey": [
      {
        "key": "key",
        "value": "X-API-KEY",
        "type": "string"
      },
      {
        "key": "value",
        "value": "{{apiKey}}",
        "type": "string"
      }
    ]
  },
  "item": [
    {
      "name": "Server Health & Status",
      "item": [
        {
          "name": "Ping",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/server/ping",
              "host": ["{{baseUrl}}"],
              "path": ["api", "server", "ping"]
            },
            "description": "Health check ping endpoint"
          }
        },
        {
          "name": "Hello",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/server/hello",
              "host": ["{{baseUrl}}"],
              "path": ["api", "server", "hello"]
            },
            "description": "Hello endpoint"
          }
        },
        {
          "name": "Server Status",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/server/status",
              "host": ["{{baseUrl}}"],
              "path": ["api", "server", "status"]
            },
            "description": "Get server status information"
          }
        },
        {
          "name": "Health Check",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/server/health",
              "host": ["{{baseUrl}}"],
              "path": ["api", "server", "health"]
            },
            "description": "Detailed health check"
          }
        },
        {
          "name": "Stop Server",
          "request": {
            "method": "POST",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/server/stop",
              "host": ["{{baseUrl}}"],
              "path": ["api", "server", "stop"]
            },
            "description": "Stop the server"
          }
        },
        {
          "name": "Get Server Logs",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/server/logs?limit=100",
              "host": ["{{baseUrl}}"],
              "path": ["api", "server", "logs"],
              "query": [
                {
                  "key": "limit",
                  "value": "100"
                }
              ]
            },
            "description": "Get server logs"
          }
        },
        {
          "name": "Submit Server Logs",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"level\": \"info\",\n  \"message\": \"Log message\",\n  \"timestamp\": \"2024-01-01T00:00:00Z\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/server/logs",
              "host": ["{{baseUrl}}"],
              "path": ["api", "server", "logs"]
            },
            "description": "Submit log entries to server"
          }
        },
        {
          "name": "Get Server Logs (POST)",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"since\": \"2024-01-01T00:00:00Z\",\n  \"level\": \"info\",\n  \"agentName\": \"Agent Name\",\n  \"agentId\": \"{{agentId}}\",\n  \"limit\": 100\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/server/logs",
              "host": ["{{baseUrl}}"],
              "path": ["api", "server", "logs"]
            },
            "description": "Get server logs using POST method with query parameters in body"
          }
        },
        {
          "name": "Clear Server Logs",
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/server/logs",
              "host": ["{{baseUrl}}"],
              "path": ["api", "server", "logs"]
            },
            "description": "Clear all server logs"
          }
        },
        {
          "name": "Get Server List",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/server/servers",
              "host": ["{{baseUrl}}"],
              "path": ["api", "server", "servers"]
            },
            "description": "Get server debug information"
          }
        }
      ]
    },
    {
      "name": "Agents Management",
      "item": [
        {
          "name": "List All Agents",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/agents",
              "host": ["{{baseUrl}}"],
              "path": ["api", "agents"]
            },
            "description": "Get a list of all agents with minimal details"
          }
        },
        {
          "name": "Get Agent Details",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/agents/{{agentId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "agents", "{{agentId}}"]
            },
            "description": "Get specific agent details by ID"
          }
        },
        {
          "name": "Create Agent",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Agent Name\",\n  \"bio\": \"Agent description\",\n  \"settings\": {\n    \"model\": \"gpt-4\",\n    \"temperature\": 0.7\n  }\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/agents",
              "host": ["{{baseUrl}}"],
              "path": ["api", "agents"]
            },
            "description": "Create a new agent"
          }
        },
        {
          "name": "Update Agent (Partial)",
          "request": {
            "method": "PATCH",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Updated Agent Name\",\n  \"bio\": \"Updated description\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/agents/{{agentId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "agents", "{{agentId}}"]
            },
            "description": "Update an existing agent (partial update)"
          }
        },
        {
          "name": "Update Agent (Full)",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Updated Agent Name\",\n  \"bio\": \"Updated description\",\n  \"settings\": {\n    \"model\": \"gpt-4\",\n    \"temperature\": 0.7\n  }\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/agents/{{agentId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "agents", "{{agentId}}"]
            },
            "description": "Update an existing agent (full replacement)"
          }
        },
        {
          "name": "Delete Agent",
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/agents/{{agentId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "agents", "{{agentId}}"]
            },
            "description": "Delete an agent"
          }
        },
        {
          "name": "Start Agent",
          "request": {
            "method": "POST",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/agents/{{agentId}}/start",
              "host": ["{{baseUrl}}"],
              "path": ["api", "agents", "{{agentId}}", "start"]
            },
            "description": "Start an existing agent"
          }
        },
        {
          "name": "Stop Agent",
          "request": {
            "method": "POST",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/agents/{{agentId}}/stop",
              "host": ["{{baseUrl}}"],
              "path": ["api", "agents", "{{agentId}}", "stop"]
            },
            "description": "Stop a running agent"
          }
        },
        {
          "name": "Get Agent Panels",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/agents/{{agentId}}/panels",
              "host": ["{{baseUrl}}"],
              "path": ["api", "agents", "{{agentId}}", "panels"]
            },
            "description": "Get agent panels configuration"
          }
        },
        {
          "name": "Get Agent Logs",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/agents/{{agentId}}/logs?roomId={{roomId}}&type=info&count=50&offset=0&excludeTypes=debug,trace",
              "host": ["{{baseUrl}}"],
              "path": ["api", "agents", "{{agentId}}", "logs"],
              "query": [
                {
                  "key": "roomId",
                  "value": "{{roomId}}",
                  "description": "Filter by room ID"
                },
                {
                  "key": "type",
                  "value": "info",
                  "description": "Filter by log type"
                },
                {
                  "key": "count",
                  "value": "50",
                  "description": "Limit number of results"
                },
                {
                  "key": "offset",
                  "value": "0",
                  "description": "Pagination offset"
                },
                {
                  "key": "excludeTypes",
                  "value": "debug,trace",
                  "description": "Exclude specific log types"
                }
              ]
            },
            "description": "Get agent logs with filtering options"
          }
        },
        {
          "name": "Delete Agent Log",
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/agents/{{agentId}}/logs/{{logId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "agents", "{{agentId}}", "logs", "{{logId}}"]
            },
            "description": "Delete a specific agent log entry"
          }
        },
        {
          "name": "Get All Worlds",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/agents/worlds",
              "host": ["{{baseUrl}}"],
              "path": ["api", "agents", "worlds"]
            },
            "description": "Get all available worlds"
          }
        },
        {
          "name": "Create World for Agent",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"World Name\",\n  \"description\": \"World description\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/agents/{{agentId}}/worlds",
              "host": ["{{baseUrl}}"],
              "path": ["api", "agents", "{{agentId}}", "worlds"]
            },
            "description": "Create a new world for an agent"
          }
        },
        {
          "name": "Update Agent World",
          "request": {
            "method": "PATCH",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Updated World Name\",\n  \"description\": \"Updated description\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/agents/{{agentId}}/worlds/{{worldId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "agents", "{{agentId}}", "worlds", "{{worldId}}"]
            },
            "description": "Update an agent's world"
          }
        },
        {
          "name": "Delete Agent World",
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/agents/{{agentId}}/worlds/{{worldId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "agents", "{{agentId}}", "worlds", "{{worldId}}"]
            },
            "description": "Delete an agent's world"
          }
        }
      ]
    },
    {
      "name": "Messaging System",
      "item": [
        {
          "name": "Submit Message",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"channel_id\": \"{{channelId}}\",\n  \"server_id\": \"00000000-0000-0000-0000-000000000000\",\n  \"author_id\": \"{{userId}}\",\n  \"content\": \"Hello from API\",\n  \"source_type\": \"user_message\",\n  \"raw_message\": {\n    \"text\": \"Hello from API\"\n  },\n  \"metadata\": {\n    \"platform\": \"api\"\n  }\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/messaging/submit",
              "host": ["{{baseUrl}}"],
              "path": ["api", "messaging", "submit"]
            },
            "description": "Submit a message from an agent or system (already processed messages)"
          }
        },
        {
          "name": "Complete Message",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"channel_id\": \"{{channelId}}\",\n  \"server_id\": \"{{serverId}}\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/messaging/complete",
              "host": ["{{baseUrl}}"],
              "path": ["api", "messaging", "complete"]
            },
            "description": "Notify that message processing is complete"
          }
        },
        {
          "name": "Ingest External Message",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"channel_id\": \"{{channelId}}\",\n  \"server_id\": \"{{serverId}}\",\n  \"author_id\": \"{{userId}}\",\n  \"author_display_name\": \"External User\",\n  \"content\": \"Message from external system\",\n  \"source_id\": \"external-msg-123\",\n  \"source_type\": \"discord\",\n  \"raw_message\": {\n    \"text\": \"Message from external system\"\n  },\n  \"metadata\": {\n    \"platform\": \"discord\"\n  }\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/messaging/ingest-external",
              "host": ["{{baseUrl}}"],
              "path": ["api", "messaging", "ingest-external"]
            },
            "description": "Ingest a message from an external source for agent processing"
          }
        },
        {
          "name": "Get Central Servers",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/messaging/central-servers",
              "host": ["{{baseUrl}}"],
              "path": ["api", "messaging", "central-servers"]
            },
            "description": "Get all central messaging servers"
          }
        },
        {
          "name": "Get All Servers",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/messaging/servers",
              "host": ["{{baseUrl}}"],
              "path": ["api", "messaging", "servers"]
            },
            "description": "Get all messaging servers"
          }
        },
        {
          "name": "Get Specific Server",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/messaging/servers/{{serverId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "messaging", "servers", "{{serverId}}"]
            },
            "description": "Get details of a specific server"
          }
        },
        {
          "name": "Create Server",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Server Name\",\n  \"description\": \"Server description\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/messaging/servers",
              "host": ["{{baseUrl}}"],
              "path": ["api", "messaging", "servers"]
            },
            "description": "Create a new messaging server"
          }
        },
        {
          "name": "Add Agent to Server",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"agentId\": \"{{agentId}}\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/messaging/servers/{{serverId}}/agents",
              "host": ["{{baseUrl}}"],
              "path": ["api", "messaging", "servers", "{{serverId}}", "agents"]
            },
            "description": "Add an agent to a messaging server"
          }
        },
        {
          "name": "Remove Agent from Server",
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/messaging/servers/{{serverId}}/agents/{{agentId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "messaging", "servers", "{{serverId}}", "agents", "{{agentId}}"]
            },
            "description": "Remove an agent from a messaging server"
          }
        },
        {
          "name": "Get Server Agents",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/messaging/servers/{{serverId}}/agents",
              "host": ["{{baseUrl}}"],
              "path": ["api", "messaging", "servers", "{{serverId}}", "agents"]
            },
            "description": "Get all agents for a server"
          }
        },
        {
          "name": "Get Agent Servers",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/messaging/agents/{{agentId}}/servers",
              "host": ["{{baseUrl}}"],
              "path": ["api", "messaging", "agents", "{{agentId}}", "servers"]
            },
            "description": "Get all servers for an agent"
          }
        },
        {
          "name": "Update Server",
          "request": {
            "method": "PATCH",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Updated Server Name\",\n  \"description\": \"Updated server description\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/messaging/servers/{{serverId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "messaging", "servers", "{{serverId}}"]
            },
            "description": "Update server details"
          }
        },
        {
          "name": "Delete Server",
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/messaging/servers/{{serverId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "messaging", "servers", "{{serverId}}"]
            },
            "description": "Delete a messaging server"
          }
        }
      ]
    },
    {
      "name": "Channels & Messages",
      "item": [
        {
          "name": "Create Channel Message",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"content\": \"Message content\",\n  \"userId\": \"user-id\",\n  \"agentId\": \"{{agentId}}\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/messaging/central-channels/{{channelId}}/messages",
              "host": ["{{baseUrl}}"],
              "path": ["api", "messaging", "central-channels", "{{channelId}}", "messages"]
            },
            "description": "Create a new message in a channel"
          }
        },
        {
          "name": "Get Channel Messages",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/messaging/central-channels/{{channelId}}/messages?limit=50",
              "host": ["{{baseUrl}}"],
              "path": ["api", "messaging", "central-channels", "{{channelId}}", "messages"],
              "query": [
                {
                  "key": "limit",
                  "value": "50"
                }
              ]
            },
            "description": "Get messages from a channel"
          }
        },
        {
          "name": "Get Server Channels",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/messaging/central-servers/{{serverId}}/channels",
              "host": ["{{baseUrl}}"],
              "path": ["api", "messaging", "central-servers", "{{serverId}}", "channels"]
            },
            "description": "Get all channels for a server"
          }
        },
        {
          "name": "Create Channel",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Channel Name\",\n  \"description\": \"Channel description\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/messaging/channels",
              "host": ["{{baseUrl}}"],
              "path": ["api", "messaging", "channels"]
            },
            "description": "Create a regular channel"
          }
        },
        {
          "name": "Get or Create DM Channel",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/messaging/dm-channel?userId1=user1&userId2=user2",
              "host": ["{{baseUrl}}"],
              "path": ["api", "messaging", "dm-channel"],
              "query": [
                {
                  "key": "userId1",
                  "value": "user1"
                },
                {
                  "key": "userId2",
                  "value": "user2"
                }
              ]
            },
            "description": "Get or create a direct message channel"
          }
        },
        {
          "name": "Create Central Channel",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Central Channel Name\",\n  \"serverId\": \"{{serverId}}\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/messaging/central-channels",
              "host": ["{{baseUrl}}"],
              "path": ["api", "messaging", "central-channels"]
            },
            "description": "Create a central channel"
          }
        },
        {
          "name": "Get Channel Details",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/messaging/central-channels/{{channelId}}/details",
              "host": ["{{baseUrl}}"],
              "path": ["api", "messaging", "central-channels", "{{channelId}}", "details"]
            },
            "description": "Get detailed channel information"
          }
        },
        {
          "name": "Get Channel Participants",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/messaging/central-channels/{{channelId}}/participants",
              "host": ["{{baseUrl}}"],
              "path": ["api", "messaging", "central-channels", "{{channelId}}", "participants"]
            },
            "description": "Get channel participants"
          }
        },
        {
          "name": "Delete Channel Message",
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/messaging/central-channels/{{channelId}}/messages/{{messageId}}",
              "host": ["{{baseUrl}}"],
              "path": [
                "api",
                "messaging",
                "central-channels",
                "{{channelId}}",
                "messages",
                "{{messageId}}"
              ]
            },
            "description": "Delete a specific message from a channel"
          }
        },
        {
          "name": "Clear Channel Messages",
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/messaging/central-channels/{{channelId}}/messages",
              "host": ["{{baseUrl}}"],
              "path": ["api", "messaging", "central-channels", "{{channelId}}", "messages"]
            },
            "description": "Clear all messages from a channel"
          }
        },
        {
          "name": "Add Agent to Channel",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"agentId\": \"{{agentId}}\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/messaging/central-channels/{{channelId}}/agents",
              "host": ["{{baseUrl}}"],
              "path": ["api", "messaging", "central-channels", "{{channelId}}", "agents"]
            },
            "description": "Add an agent to a channel"
          }
        },
        {
          "name": "Remove Agent from Channel",
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/messaging/central-channels/{{channelId}}/agents/{{agentId}}",
              "host": ["{{baseUrl}}"],
              "path": [
                "api",
                "messaging",
                "central-channels",
                "{{channelId}}",
                "agents",
                "{{agentId}}"
              ]
            },
            "description": "Remove an agent from a channel"
          }
        },
        {
          "name": "List Channel Agents",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/messaging/central-channels/{{channelId}}/agents",
              "host": ["{{baseUrl}}"],
              "path": ["api", "messaging", "central-channels", "{{channelId}}", "agents"]
            },
            "description": "List all agents in a channel"
          }
        },
        {
          "name": "Update Channel",
          "request": {
            "method": "PATCH",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Updated Channel Name\",\n  \"description\": \"Updated description\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/messaging/central-channels/{{channelId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "messaging", "central-channels", "{{channelId}}"]
            },
            "description": "Update channel information"
          }
        },
        {
          "name": "Delete Channel",
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/messaging/central-channels/{{channelId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "messaging", "central-channels", "{{channelId}}"]
            },
            "description": "Delete a channel"
          }
        },
        {
          "name": "Create Group Channel (Legacy)",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Group Channel Name\",\n  \"participants\": [\"user1\", \"user2\", \"user3\"]\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/messaging/group-channels",
              "host": ["{{baseUrl}}"],
              "path": ["api", "messaging", "group-channels"]
            },
            "description": "Create a group channel (legacy endpoint)"
          }
        }
      ]
    },
    {
      "name": "Memory Management",
      "item": [
        {
          "name": "Get Room Memories",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/memory/{{agentId}}/rooms/{{roomId}}/memories?limit=50",
              "host": ["{{baseUrl}}"],
              "path": ["api", "memory", "{{agentId}}", "rooms", "{{roomId}}", "memories"],
              "query": [
                {
                  "key": "limit",
                  "value": "50"
                }
              ]
            },
            "description": "Get memories for a specific room and agent"
          }
        },
        {
          "name": "Get Agent Memories",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/memory/{{agentId}}/memories?limit=50",
              "host": ["{{baseUrl}}"],
              "path": ["api", "memory", "{{agentId}}", "memories"],
              "query": [
                {
                  "key": "limit",
                  "value": "50"
                }
              ]
            },
            "description": "Get all memories for an agent"
          }
        },
        {
          "name": "Create Memory",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"content\": \"New memory content\",\n  \"importance\": 0.8,\n  \"roomId\": \"{{roomId}}\",\n  \"metadata\": {}\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/memory/{{agentId}}/memories",
              "host": ["{{baseUrl}}"],
              "path": ["api", "memory", "{{agentId}}", "memories"]
            },
            "description": "Create a new memory for an agent"
          }
        },
        {
          "name": "Update Memory",
          "request": {
            "method": "PATCH",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"content\": \"Updated memory content\",\n  \"importance\": 0.8\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/memory/{{agentId}}/memories/{{memoryId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "memory", "{{agentId}}", "memories", "{{memoryId}}"]
            },
            "description": "Update a specific memory"
          }
        },
        {
          "name": "Delete Memory",
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/memory/{{agentId}}/memories/{{memoryId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "memory", "{{agentId}}", "memories", "{{memoryId}}"]
            },
            "description": "Delete a specific memory"
          }
        },
        {
          "name": "Delete All Room Memories",
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/memory/{{agentId}}/memories/all/{{roomId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "memory", "{{agentId}}", "memories", "all", "{{roomId}}"]
            },
            "description": "Delete all memories for a specific room"
          }
        },
        {
          "name": "Get Memory Group",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/memory/groups/{{serverId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "memory", "groups", "{{serverId}}"]
            },
            "description": "Get memory group details for a server"
          }
        },
        {
          "name": "Create Memory Group",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Memory Group Name\",\n  \"description\": \"Group description\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/memory/groups/{{serverId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "memory", "groups", "{{serverId}}"]
            },
            "description": "Create a memory group for a server"
          }
        },
        {
          "name": "Update Memory Group",
          "request": {
            "method": "PATCH",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Updated Memory Group Name\",\n  \"description\": \"Updated group description\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/memory/groups/{{serverId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "memory", "groups", "{{serverId}}"]
            },
            "description": "Update memory group for a server"
          }
        },
        {
          "name": "Delete Memory Group",
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/memory/groups/{{serverId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "memory", "groups", "{{serverId}}"]
            },
            "description": "Delete a memory group"
          }
        },
        {
          "name": "Clear Group Memories",
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/memory/groups/{{serverId}}/memories",
              "host": ["{{baseUrl}}"],
              "path": ["api", "memory", "groups", "{{serverId}}", "memories"]
            },
            "description": "Clear all memories from a group"
          }
        },
        {
          "name": "Create Room",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Room Name\",\n  \"type\": \"dm\",\n  \"source\": \"client\",\n  \"worldId\": \"{{worldId}}\",\n  \"serverId\": \"{{serverId}}\",\n  \"metadata\": {}\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/memory/{{agentId}}/rooms",
              "host": ["{{baseUrl}}"],
              "path": ["api", "memory", "{{agentId}}", "rooms"]
            },
            "description": "Create a new room for an agent"
          }
        },
        {
          "name": "Get Agent Rooms",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/memory/{{agentId}}/rooms",
              "host": ["{{baseUrl}}"],
              "path": ["api", "memory", "{{agentId}}", "rooms"]
            },
            "description": "Get all rooms for an agent"
          }
        },
        {
          "name": "Get Specific Room",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/memory/{{agentId}}/rooms/{{roomId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "memory", "{{agentId}}", "rooms", "{{roomId}}"]
            },
            "description": "Get details of a specific room"
          }
        },
        {
          "name": "Update Room",
          "request": {
            "method": "PATCH",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Updated Room Name\",\n  \"metadata\": {\n    \"updated\": true\n  }\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/memory/{{agentId}}/rooms/{{roomId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "memory", "{{agentId}}", "rooms", "{{roomId}}"]
            },
            "description": "Update room details"
          }
        },
        {
          "name": "Delete Room",
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/memory/{{agentId}}/rooms/{{roomId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "memory", "{{agentId}}", "rooms", "{{roomId}}"]
            },
            "description": "Delete a specific room"
          }
        }
      ]
    },
    {
      "name": "Audio Processing",
      "item": [
        {
          "name": "Synthesize Audio Message",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"text\": \"Hello, this is a test message\",\n  \"voice\": \"default\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/audio/{{agentId}}/audio-messages/synthesize",
              "host": ["{{baseUrl}}"],
              "path": ["api", "audio", "{{agentId}}", "audio-messages", "synthesize"]
            },
            "description": "Synthesize text to audio message"
          }
        },
        {
          "name": "Generate Speech",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"text\": \"Text to convert to speech\",\n  \"voice\": \"default\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/audio/{{agentId}}/speech/generate",
              "host": ["{{baseUrl}}"],
              "path": ["api", "audio", "{{agentId}}", "speech", "generate"]
            },
            "description": "Generate speech from text"
          }
        },
        {
          "name": "Process Conversation Audio",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "multipart/form-data"
              }
            ],
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "key": "audio",
                  "type": "file",
                  "src": []
                },
                {
                  "key": "roomId",
                  "value": "{{roomId}}",
                  "type": "text"
                }
              ]
            },
            "url": {
              "raw": "{{baseUrl}}/api/audio/{{agentId}}/speech/conversation",
              "host": ["{{baseUrl}}"],
              "path": ["api", "audio", "{{agentId}}", "speech", "conversation"]
            },
            "description": "Process audio for conversation"
          }
        },
        {
          "name": "Process Audio Message",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "multipart/form-data"
              }
            ],
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "key": "audio",
                  "type": "file",
                  "src": []
                }
              ]
            },
            "url": {
              "raw": "{{baseUrl}}/api/audio/{{agentId}}/audio-messages",
              "host": ["{{baseUrl}}"],
              "path": ["api", "audio", "{{agentId}}", "audio-messages"]
            },
            "description": "Process an audio message"
          }
        },
        {
          "name": "Transcribe Audio",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "multipart/form-data"
              }
            ],
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "key": "audio",
                  "type": "file",
                  "src": []
                }
              ]
            },
            "url": {
              "raw": "{{baseUrl}}/api/audio/{{agentId}}/transcribe",
              "host": ["{{baseUrl}}"],
              "path": ["api", "audio", "{{agentId}}", "transcribe"]
            },
            "description": "Transcribe audio to text"
          }
        },
        {
          "name": "Process Audio",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "multipart/form-data"
              }
            ],
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "key": "audio",
                  "type": "file",
                  "src": []
                }
              ]
            },
            "url": {
              "raw": "{{baseUrl}}/api/audio/{{agentId}}/process",
              "host": ["{{baseUrl}}"],
              "path": ["api", "audio", "{{agentId}}", "process"]
            },
            "description": "Process audio file"
          }
        }
      ]
    },
    {
      "name": "Media Upload",
      "item": [
        {
          "name": "Upload Agent Media",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "multipart/form-data"
              }
            ],
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "key": "file",
                  "type": "file",
                  "src": []
                }
              ]
            },
            "url": {
              "raw": "{{baseUrl}}/api/media/agents/{{agentId}}/upload-media",
              "host": ["{{baseUrl}}"],
              "path": ["api", "media", "agents", "{{agentId}}", "upload-media"]
            },
            "description": "Upload media file for an agent"
          }
        },
        {
          "name": "Upload Channel Media",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "multipart/form-data"
              }
            ],
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "key": "file",
                  "type": "file",
                  "src": []
                }
              ]
            },
            "url": {
              "raw": "{{baseUrl}}/api/messaging/channels/{{channelId}}/upload-media",
              "host": ["{{baseUrl}}"],
              "path": ["api", "messaging", "channels", "{{channelId}}", "upload-media"]
            },
            "description": "Upload media file for a channel"
          }
        }
      ]
    },
    {
      "name": "System Configuration",
      "item": [
        {
          "name": "Get Local Environment",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/system/env/local",
              "host": ["{{baseUrl}}"],
              "path": ["api", "system", "env", "local"]
            },
            "description": "Get local environment configuration"
          }
        },
        {
          "name": "Update Local Environment",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"key\": \"value\",\n  \"setting\": \"updated_value\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/system/env/local",
              "host": ["{{baseUrl}}"],
              "path": ["api", "system", "env", "local"]
            },
            "description": "Update local environment configuration"
          }
        }
      ]
    },
    {
      "name": "Static Media Files",
      "item": [
        {
          "name": "Get Agent Media File",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/media/uploads/{{agentId}}/filename.jpg",
              "host": ["{{baseUrl}}"],
              "path": ["media", "uploads", "{{agentId}}", "filename.jpg"]
            },
            "description": "Serve uploaded agent media files"
          }
        },
        {
          "name": "Get Generated Agent File",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/media/generated/{{agentId}}/filename.jpg",
              "host": ["{{baseUrl}}"],
              "path": ["media", "generated", "{{agentId}}", "filename.jpg"]
            },
            "description": "Serve generated agent files"
          }
        },
        {
          "name": "Get Channel Media File",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/media/uploads/channels/{{channelId}}/filename.jpg",
              "host": ["{{baseUrl}}"],
              "path": ["media", "uploads", "channels", "{{channelId}}", "filename.jpg"]
            },
            "description": "Serve uploaded channel media files"
          }
        }
      ]
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          "// Auto-generate UUIDs for testing if not set",
          "if (!pm.collectionVariables.get('agentId')) {",
          "    pm.collectionVariables.set('agentId', '00000000-0000-0000-0000-000000000000');",
          "}",
          "if (!pm.collectionVariables.get('roomId')) {",
          "    pm.collectionVariables.set('roomId', '11111111-1111-1111-1111-111111111111');",
          "}",
          "if (!pm.collectionVariables.get('channelId')) {",
          "    pm.collectionVariables.set('channelId', '22222222-2222-2222-2222-222222222222');",
          "}",
          "if (!pm.collectionVariables.get('serverId')) {",
          "    pm.collectionVariables.set('serverId', '33333333-3333-3333-3333-333333333333');",
          "}",
          "if (!pm.collectionVariables.get('logId')) {",
          "    pm.collectionVariables.set('logId', '44444444-4444-4444-4444-444444444444');",
          "}",
          "if (!pm.collectionVariables.get('memoryId')) {",
          "    pm.collectionVariables.set('memoryId', '55555555-5555-5555-5555-555555555555');",
          "}",
          "if (!pm.collectionVariables.get('worldId')) {",
          "    pm.collectionVariables.set('worldId', '66666666-6666-6666-6666-666666666666');",
          "}",
          "if (!pm.collectionVariables.get('messageId')) {",
          "    pm.collectionVariables.set('messageId', '77777777-7777-7777-7777-777777777777');",
          "}"
        ]
      }
    }
  ]
}
